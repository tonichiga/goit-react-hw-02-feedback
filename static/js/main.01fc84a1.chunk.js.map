{"version":3,"sources":["Components/ButtonFeedback.js","Components/Statistics.js","Components/PercantageFeedback.js","App.js","reportWebVitals.js","index.js","Components/ButtonFeedback.module.scss"],"names":["ButtonFeedback","onClickGood","onClickNeutral","onClickBad","className","s","buttonGood","onClick","buttonNeutral","buttonBad","Statistics","good","neutral","bad","title","PercentageFeedback","percantage","App","state","percentageFeedback","summary","Math","trunc","handleClickButtonGood","event","setState","prevState","handleClickButtonNeutral","handleClickButtonBad","total","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qSAkBeA,EAhBQ,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACrD,OACE,gCACE,wBAAQC,UAAWC,IAAEC,WAAYC,QAASN,EAA1C,kBAGA,wBAAQG,UAAWC,IAAEG,cAAeD,QAASL,EAA7C,qBAGA,wBAAQE,UAAWC,IAAEI,UAAWF,QAASJ,EAAzC,qBCFSO,EATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAvB,OACjB,gCACE,6BAAKA,IACL,uCAAUH,KACV,0CAAaC,KACb,sCAASC,SCIEE,EATY,SAAC,GAA2B,IAAzBD,EAAwB,EAAxBA,MAAOE,EAAiB,EAAjBA,WACnC,OACE,qCACE,6BAAKF,IACL,iCAAOE,EAAP,WCwDSC,E,4MArDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPM,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAA5BP,EADiB,EACjBA,KACJS,EAAW,KAAOT,EAFG,EACXC,QADW,EACFC,KACwBF,EAM/C,OAJKS,IACHA,EAAU,GAEZA,EAAUC,KAAKC,MAAMF,I,EAGvBG,sBAAwB,SAACC,GACvB,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEf,KAAMe,EAAUf,KAAO,O,EAGpCgB,yBAA2B,SAACH,GAC1B,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEd,QAASc,EAAUd,QAAU,O,EAG1CgB,qBAAuB,SAACJ,GACtB,EAAKC,UAAS,SAACC,GACb,MAAO,CAAEb,IAAKa,EAAUb,IAAM,O,4CAIlC,WACE,IAAMgB,EAAQC,KAAKX,qBACnB,OACE,gCACE,uDACA,cAAC,EAAD,CACElB,YAAa6B,KAAKP,sBAClBrB,eAAgB4B,KAAKH,yBACrBxB,WAAY2B,KAAKF,uBAEnB,cAAC,EAAD,CACEd,MAAO,aACPH,KAAMmB,KAAKZ,MAAMP,KACjBC,QAASkB,KAAKZ,MAAMN,QACpBC,IAAKiB,KAAKZ,MAAML,MAElB,cAAC,EAAD,CAAoBC,MAAO,oBAAqBE,WAAYa,W,GAhDlDE,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,WAAa,mCAAmC,cAAgB,sCAAsC,UAAY,qC","file":"static/js/main.01fc84a1.chunk.js","sourcesContent":["import s from \"./ButtonFeedback.module.scss\";\r\n\r\nconst ButtonFeedback = ({ onClickGood, onClickNeutral, onClickBad }) => {\r\n  return (\r\n    <div>\r\n      <button className={s.buttonGood} onClick={onClickGood}>\r\n        Good\r\n      </button>\r\n      <button className={s.buttonNeutral} onClick={onClickNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button className={s.buttonBad} onClick={onClickBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonFeedback;\r\n","const Statistics = ({ good, neutral, bad, title }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","const PercentageFeedback = ({ title, percantage }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <span>{percantage}%</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PercentageFeedback;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport ButtonFeedback from \"./Components/ButtonFeedback\";\nimport Statistics from \"./Components/Statistics\";\nimport PercentageFeedback from \"./Components/PercantageFeedback\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  percentageFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    let summary = (100 / (good + neutral + bad)) * good;\n\n    if (!summary) {\n      summary = 0;\n    }\n    summary = Math.trunc(summary);\n    return summary;\n  };\n  handleClickButtonGood = (event) => {\n    this.setState((prevState) => {\n      return { good: prevState.good + 1 };\n    });\n  };\n  handleClickButtonNeutral = (event) => {\n    this.setState((prevState) => {\n      return { neutral: prevState.neutral + 1 };\n    });\n  };\n  handleClickButtonBad = (event) => {\n    this.setState((prevState) => {\n      return { bad: prevState.bad + 1 };\n    });\n  };\n\n  render() {\n    const total = this.percentageFeedback();\n    return (\n      <div>\n        <h2>Please leave feedback</h2>\n        <ButtonFeedback\n          onClickGood={this.handleClickButtonGood}\n          onClickNeutral={this.handleClickButtonNeutral}\n          onClickBad={this.handleClickButtonBad}\n        />\n        <Statistics\n          title={\"Statistics\"}\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n        />\n        <PercentageFeedback title={\"Positive feedback\"} percantage={total} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGood\":\"ButtonFeedback_buttonGood__22zKJ\",\"buttonNeutral\":\"ButtonFeedback_buttonNeutral__1f5gk\",\"buttonBad\":\"ButtonFeedback_buttonBad__1_BlS\"};"],"sourceRoot":""}